{"ast":null,"code":"export default {\n  data() {\n    return {\n      scrollTop: 0,\n      //默认距离顶部的距离\n      isShow: false,\n      //控制返回顶部按钮的显隐\n      scrollTrigger: false //默认初始值\n    };\n  },\n\n  computed: {},\n  methods: {\n    // 返回顶部事件\n    goBack() {\n      let that = this; // 防止this指向问题\n      // 防止频繁点击，故返回顶部后设置scrollTrigger为初始值\n      if (that.scrollTrigger) {\n        return;\n      }\n      // 获取当前距离顶部的距离\n      let scrollTop = this.scrollTop;\n      console.log(scrollTop);\n      let steep = scrollTop / 2000;\n      let timer = setInterval(() => {\n        that.scrollTrigger = true;\n        // 滚动的速度逐渐变快，第一次走2000/1，然后减去已走的距离，下一次用剩下的距离再减去步进值，步进值也是不断变化，这样速度会越来越快\n        scrollTop -= steep;\n        // 步进值不改变的话会匀速缓慢上滑，不断增加步进值上滑的距离增加，视觉效果速度变快\n        steep += 20;\n        if (scrollTop <= 0) {\n          clearInterval(timer);\n          that.scrollTrigger = false;\n        }\n        that.$refs.outerDom.scrollTop = scrollTop;\n      }, 30);\n    },\n    // 监听滚动条\n    getScrollTop(e) {\n      let that = this; // 防止this指向问题\n      // 设备一屏的高度\n      let clientHeight = document.documentElement.clientHeight || document.body.clientHeight;\n      let scrollTop = e.srcElement.scrollTop;\n      this.scrollTop = scrollTop;\n      // 判断距离顶部多少显示回到顶部图标\n      if (scrollTop > clientHeight) {\n        that.isShow = true;\n      } else {\n        that.isShow = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","scrollTop","isShow","scrollTrigger","computed","methods","goBack","that","console","log","steep","timer","setInterval","clearInterval","$refs","outerDom","getScrollTop","e","clientHeight","document","documentElement","body","srcElement"],"sources":["/Users/tanghaoyun/Documents/GitHub/WebSiteForLab/web-zhang/src/components/Research/ResearchBiology.vue"],"sourcesContent":["<template>\n    <div class=\"outerBox\" ref=\"outerDom\" @scroll=\"getScrollTop\">\n      <div v-for=\"item in 100\" :key=\"item\">页面内容{{item}}</div>\n      <div class=\"scrollBox\" v-show=\"isShow\" @click=\"goBack\">⬆️</div>\n    </div>\n  </template>\n  <script>\n  export default {\n    data() {\n      return {\n        scrollTop: 0, //默认距离顶部的距离\n        isShow: false, //控制返回顶部按钮的显隐\n        scrollTrigger: false, //默认初始值\n      };\n    },\n    computed: {},\n    methods: {\n      // 返回顶部事件\n      goBack() {\n        let that = this; // 防止this指向问题\n        // 防止频繁点击，故返回顶部后设置scrollTrigger为初始值\n        if (that.scrollTrigger) {\n          return;\n        }\n        // 获取当前距离顶部的距离\n        let scrollTop = this.scrollTop;\n        console.log(scrollTop);\n        let steep = scrollTop / 2000;\n        let timer = setInterval(() => {\n          that.scrollTrigger = true;\n          // 滚动的速度逐渐变快，第一次走2000/1，然后减去已走的距离，下一次用剩下的距离再减去步进值，步进值也是不断变化，这样速度会越来越快\n          scrollTop -= steep;\n          // 步进值不改变的话会匀速缓慢上滑，不断增加步进值上滑的距离增加，视觉效果速度变快\n          steep += 20;\n          if (scrollTop <= 0) {\n            clearInterval(timer);\n            that.scrollTrigger = false;\n          }\n          that.$refs.outerDom.scrollTop = scrollTop;\n        }, 30);\n      },\n      // 监听滚动条\n      getScrollTop(e) {\n        let that = this; // 防止this指向问题\n        // 设备一屏的高度\n        let clientHeight =\n          document.documentElement.clientHeight || document.body.clientHeight;\n        let scrollTop = e.srcElement.scrollTop;\n        this.scrollTop = scrollTop;\n        // 判断距离顶部多少显示回到顶部图标\n        if (scrollTop > clientHeight) {\n          that.isShow = true;\n        } else {\n          that.isShow = false;\n        }\n      },\n    },\n  };\n  </script>\n  <style scoped>\n  /* 最外层盒子样式 */\n  .outerBox {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    overflow-y: auto;\n    padding:4px 6px;\n  }\n  /* 返回顶部样式 */\n  .scrollBox {\n    position: fixed;\n    right: 10px;\n    bottom: 20px;\n    font-size: 22px;\n    z-index: 99;\n  }\n  /* 浏览器滚动条样式 */\n  ::-webkit-scrollbar {\n    width: 4px;\n    background: transparent;\n  }\n  ::-webkit-scrollbar-thumb {\n    background: rgb(174, 174, 174);\n    border-radius: 50px;\n  }\n  ::-webkit-scrollbar-track {\n    background: transparent;\n  }\n  </style>\n  "],"mappings":"AAOE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,CAAC;MAAE;MACdC,MAAM,EAAE,KAAK;MAAE;MACfC,aAAa,EAAE,KAAK,CAAE;IACxB,CAAC;EACH,CAAC;;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,OAAO,EAAE;IACP;IACAC,MAAMA,CAAA,EAAG;MACP,IAAIC,IAAG,GAAI,IAAI,EAAE;MACjB;MACA,IAAIA,IAAI,CAACJ,aAAa,EAAE;QACtB;MACF;MACA;MACA,IAAIF,SAAQ,GAAI,IAAI,CAACA,SAAS;MAC9BO,OAAO,CAACC,GAAG,CAACR,SAAS,CAAC;MACtB,IAAIS,KAAI,GAAIT,SAAQ,GAAI,IAAI;MAC5B,IAAIU,KAAI,GAAIC,WAAW,CAAC,MAAM;QAC5BL,IAAI,CAACJ,aAAY,GAAI,IAAI;QACzB;QACAF,SAAQ,IAAKS,KAAK;QAClB;QACAA,KAAI,IAAK,EAAE;QACX,IAAIT,SAAQ,IAAK,CAAC,EAAE;UAClBY,aAAa,CAACF,KAAK,CAAC;UACpBJ,IAAI,CAACJ,aAAY,GAAI,KAAK;QAC5B;QACAI,IAAI,CAACO,KAAK,CAACC,QAAQ,CAACd,SAAQ,GAAIA,SAAS;MAC3C,CAAC,EAAE,EAAE,CAAC;IACR,CAAC;IACD;IACAe,YAAYA,CAACC,CAAC,EAAE;MACd,IAAIV,IAAG,GAAI,IAAI,EAAE;MACjB;MACA,IAAIW,YAAW,GACbC,QAAQ,CAACC,eAAe,CAACF,YAAW,IAAKC,QAAQ,CAACE,IAAI,CAACH,YAAY;MACrE,IAAIjB,SAAQ,GAAIgB,CAAC,CAACK,UAAU,CAACrB,SAAS;MACtC,IAAI,CAACA,SAAQ,GAAIA,SAAS;MAC1B;MACA,IAAIA,SAAQ,GAAIiB,YAAY,EAAE;QAC5BX,IAAI,CAACL,MAAK,GAAI,IAAI;MACpB,OAAO;QACLK,IAAI,CAACL,MAAK,GAAI,KAAK;MACrB;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}